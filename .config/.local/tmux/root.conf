# bind-key    -T root         MouseDown1Pane       select-pane -t = \; send-keys -M
# bind-key    -T root         MouseDown1Status     select-window -t =
# bind-key    -T root         MouseDown2Pane       select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "paste -p"
# bind-key    -T root         MouseDown3Pane       if-shell -F -t = "#{||:#{mouse_any_flag},#{&&:#{pane_in_mode},#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}}}" "select-pane -t= ; send -M" "display-menu -t= -xM -yM -T \"#[align=centre]#{pane_index} (#{pane_id})\" \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}\" < \"send -X history-top\" \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}\" > \"send -X history-bottom\" '' \"#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}\" C-r \"if -F \\\"#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}\\\" \\\"copy-mode -t=\\\" ; send -Xt= search-backward \\\"#{q:mouse_word}\\\"\" \"#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}\" C-y \"copy-mode -q ; send-keys -l -- \\\"#{q:mouse_word}\\\"\" \"#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}\" c \"copy-mode -q ; set-buffer -- \\\"#{q:mouse_word}\\\"\" \"#{?mouse_line,Copy Line,}\" l \"copy-mode -q ; set-buffer -- \\\"#{q:mouse_line}\\\"\" '' \"Horizontal Split\" h \"split-window -h\" \"Vertical Split\" v \"split-window -v\" '' \"#{?#{>:#{window_panes},1},,-}Swap Up\" u \"swap-pane -U\" \"#{?#{>:#{window_panes},1},,-}Swap Down\" d \"swap-pane -D\" \"#{?pane_marked_set,,-}Swap Marked\" s swap-pane '' Kill X kill-pane Respawn R \"respawn-pane -k\" \"#{?pane_marked,Unmark,Mark}\" m \"select-pane -m\" \"#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}\" z \"resize-pane -Z\""
# bind-key    -T root         MouseDown3Status     display-menu -T "#[align=centre]#{window_index}:#{window_name}" -t = -x W -y W "#{?#{>:#{session_windows},1},,-}Swap Left" l "swap-window -t:-1" "#{?#{>:#{session_windows},1},,-}Swap Right" r "swap-window -t:+1" "#{?pane_marked_set,,-}Swap Marked" s swap-window '' Kill X kill-window Respawn R "respawn-window -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" Rename n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" '' "New After" w "new-window -a" "New At End" W new-window
# bind-key    -T root         MouseDown3StatusLeft display-menu -T "#[align=centre]#{session_name}" -t = -x M -y W Next n "switch-client -n" Previous p "switch-client -p" '' Renumber N "move-window -r" Rename n "command-prompt -I \"#S\" \"rename-session -- '%%'\"" '' "New Session" s new-session "New Window" w new-window
# bind-key    -T root         MouseDrag1Pane       if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -M"
# bind-key    -T root         MouseDrag1Border     resize-pane -M
# bind-key    -T root         WheelUpPane          if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -e"
# bind-key    -T root         WheelUpStatus        previous-window
# bind-key    -T root         WheelDownStatus      next-window
# bind-key    -T root         DoubleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-word ; run -d0.3 ; send -X copy-pipe-and-cancel"
# bind-key    -T root         TripleClick1Pane     select-pane -t = \; if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" "send -M" "copy-mode -H ; send -X select-line ; run -d0.3 ; send -X copy-pipe-and-cancel"
# bind-key    -T root         M-MouseDown3Pane     display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Top,}" < "send -X history-top" "#{?#{m/r:(copy|view)-mode,#{pane_mode}},Go To Bottom,}" > "send -X history-bottom" '' "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "if -F \"#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}\" \"copy-mode -t=\" ; send -Xt= search-backward \"#{q:mouse_word}\"" "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y "copy-mode -q ; send-keys -l -- \"#{q:mouse_word}\"" "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c "copy-mode -q ; set-buffer -- \"#{q:mouse_word}\"" "#{?mouse_line,Copy Line,}" l "copy-mode -q ; set-buffer -- \"#{q:mouse_line}\"" '' "Horizontal Split" h "split-window -h" "Vertical Split" v "split-window -v" '' "#{?#{>:#{window_panes},1},,-}Swap Up" u "swap-pane -U" "#{?#{>:#{window_panes},1},,-}Swap Down" d "swap-pane -D" "#{?pane_marked_set,,-}Swap Marked" s swap-pane '' Kill X kill-pane Respawn R "respawn-pane -k" "#{?pane_marked,Unmark,Mark}" m "select-pane -m" "#{?#{>:#{window_panes},1},,-}#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"

bind-key -T root C-@ send-keys Escape
bind-key -T root C-[ send-keys Escape
bind-key -T root M-, resize-pane -L
bind-key -T root M-- split-window -v
bind-key -T root M-. resize-pane -R
bind-key -T root M-/ split-window -h
bind-key -T root M-: command-prompt
bind-key -T root 'M-;' command-prompt -p 'execute on below pane:' { split-window '%%' }
bind-key -T root M-< resize-pane -L 5
bind-key -T root M-> resize-pane -R 5
bind-key -T root M-[ resize-pane -U
bind-key -T root M-] resize-pane -D
bind-key -T root 'M-{' resize-pane -U 5
bind-key -T root 'M-}' resize-pane -D 5
bind-key -T root M-d { if-shell -F "#{?pane_in_mode,0,1}" copy-mode; send-keys -X halfpage-down }
bind-key -T root M-h if-shell -F "#{?window_start_flag,0,1}" { select-window -p }
bind-key -T root M-j select-pane -t +1
bind-key -T root M-k select-pane -t -1
bind-key -T root M-l if-shell -F "#{?window_end_flag,0,1}" { select-window -n }
bind-key -T root M-n new-window -a
bind-key -T root M-p paste-buffer -p
bind-key -T root M-q command-prompt -k { send-keys '%%%' }
bind-key -T root M-r refresh-client
bind-key -T root M-s switch-client -T swap-table
bind-key -T root M-u { if-shell -F "#{?pane_in_mode,0,1}" copy-mode; send-keys -X halfpage-up }
bind-key -T root M-v copy-mode
bind-key -T root M-w confirm-before kill-window
bind-key -T root M-x confirm-before kill-pane
bind-key -T root M-z detach-client
bind-key -T root M-H if-shell -F "#{?pane_at_left,0,1}" { select-pane -L }
bind-key -T root M-J if-shell -F "#{?pane_at_bottom,0,1}" { select-pane -D }
bind-key -T root M-K if-shell -F "#{?pane_at_top,0,1}" { select-pane -U }
bind-key -T root M-L if-shell -F "#{?pane_at_right,0,1}" { select-pane -R }
bind-key -T root M-N new-window
bind-key -T root M-R { source-file "~/.tmux.conf"; display-message "Configuration Reloaded" }
