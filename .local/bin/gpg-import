#!/bin/bash

set -eu
source "${BASH_SOURCE%/*}"/function/error
source "${BASH_SOURCE%/*}"/function/gpg-colon
source "${BASH_SOURCE%/*}"/function/gpg-trust

usage() {
  cat <<EOF >&2
USAGE: ${0##*/} PAPERKEY
    import secret and public keys
EOF
  exit 1
}
split() {
  local begin='BEGIN PGP PUBLIC KEY BLOCK'
  sed -n -e "/$begin/$1"p "$input"
}
secrets() {
  split 'q;'
}
pubring() {
  local end='END PGP PUBLIC KEY BLOCK'
  split ",/$end/" | gpg --dearmor
}
import() {
  paperkey --secrets "$1" --pubring "$2" | gpg --import
}
find-keyid() {
  local filter='$1 == "keyid:" {print $2;exit}'
  pubring | gpg --list-packets | awk "$filter"
}
find-fingerprint() {
  local keyid=$(find-keyid)
  gpg-colon --list-keys "$keyid" fpr:10 | grep -m1 -e "$keyid"$
}
main() {
  local input=$1
  [[ -f $input ]] || error file not found: "$input"
  import <(secrets) <(pubring)
  gpg-trust $(find-fingerprint)
}

(($# == 1)) || usage
main "$@"
