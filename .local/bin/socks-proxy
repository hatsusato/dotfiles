#!/bin/bash

set -eu
source "${BASH_SOURCE%/*}"/function/error
source "${BASH_SOURCE%/*}"/function/parse-opts

readonly proxy=$HOME/.config/local/.proxy

usage() {
  cat <<EOF >&2
USAGE: ${0##*/} [-p PORT] HOST
    construct dynamic forward tunnel

    read PORT from $proxy if omitted
    format of ${proxy##*/} is as follows:
        HOST0 PORT0
        HOST1 PORT1
        ...
EOF
  exit 1
}
load-port() {
  local key='"'$host'"'
  [[ -f $proxy ]] || error config file not found: "$proxy"
  port=$(awk "{if (\$1 == $key) print \$2}" "$proxy")
  echo "port $port from config: $proxy" >&2
}
is-integer() {
  test "$1" -eq "$1" &>/dev/null
}
build-tunnel() {
  local -a ssh lsof
  ssh=(ssh -D "$port" -f -N -q "$host")
  lsof=(lsof -a -c ssh -i :"$port")
  if pgrep -fx "${ssh[*]}" &>/dev/null; then
    "${lsof[@]}" | grep -F -q '(CLOSE_WAIT)' || return 0
    kill $("${lsof[@]}" -t)
  fi
  "${lsof[@]}" >&2 && error port occupied: "$port"
  "${ssh[@]}"
}
main() {
  local host port
  local -A opts=([p:]=port)
  parse-opts "$@" || shift $?
  (($# == 1)) || usage
  host=$1
  [[ ${port+set} ]] || load-port
  is-integer "$port" || error invalid port: "$port"
  build-tunnel
}

main "$@"
